//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TestClient.AuctionService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AuctionItem", Namespace="http://schemas.datacontract.org/2004/07/_02_WCF_PracticeExam_01")]
    [System.SerializableAttribute()]
    public partial class AuctionItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BidCustomerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BidCustomerPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal BidPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime BidTimeStampField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ItemNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RatingPriceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BidCustomerName {
            get {
                return this.BidCustomerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BidCustomerNameField, value) != true)) {
                    this.BidCustomerNameField = value;
                    this.RaisePropertyChanged("BidCustomerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BidCustomerPhone {
            get {
                return this.BidCustomerPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.BidCustomerPhoneField, value) != true)) {
                    this.BidCustomerPhoneField = value;
                    this.RaisePropertyChanged("BidCustomerPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal BidPrice {
            get {
                return this.BidPriceField;
            }
            set {
                if ((this.BidPriceField.Equals(value) != true)) {
                    this.BidPriceField = value;
                    this.RaisePropertyChanged("BidPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime BidTimeStamp {
            get {
                return this.BidTimeStampField;
            }
            set {
                if ((this.BidTimeStampField.Equals(value) != true)) {
                    this.BidTimeStampField = value;
                    this.RaisePropertyChanged("BidTimeStamp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemDescription {
            get {
                return this.ItemDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemDescriptionField, value) != true)) {
                    this.ItemDescriptionField = value;
                    this.RaisePropertyChanged("ItemDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ItemNumber {
            get {
                return this.ItemNumberField;
            }
            set {
                if ((this.ItemNumberField.Equals(value) != true)) {
                    this.ItemNumberField = value;
                    this.RaisePropertyChanged("ItemNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal RatingPrice {
            get {
                return this.RatingPriceField;
            }
            set {
                if ((this.RatingPriceField.Equals(value) != true)) {
                    this.RatingPriceField = value;
                    this.RaisePropertyChanged("RatingPrice");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Bid", Namespace="http://schemas.datacontract.org/2004/07/_02_WCF_PracticeExam_01")]
    [System.SerializableAttribute()]
    public partial class Bid : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ItemNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomName {
            get {
                return this.CustomNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomNameField, value) != true)) {
                    this.CustomNameField = value;
                    this.RaisePropertyChanged("CustomName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ItemNumber {
            get {
                return this.ItemNumberField;
            }
            set {
                if ((this.ItemNumberField.Equals(value) != true)) {
                    this.ItemNumberField = value;
                    this.RaisePropertyChanged("ItemNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AuctionService.IAuctionService")]
    public interface IAuctionService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/GetAllItems", ReplyAction="http://tempuri.org/IAuctionService/GetAllItemsResponse")]
        TestClient.AuctionService.AuctionItem[] GetAllItems();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/GetAllItems", ReplyAction="http://tempuri.org/IAuctionService/GetAllItemsResponse")]
        System.Threading.Tasks.Task<TestClient.AuctionService.AuctionItem[]> GetAllItemsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/GetItemById", ReplyAction="http://tempuri.org/IAuctionService/GetItemByIdResponse")]
        TestClient.AuctionService.AuctionItem GetItemById(int itemNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/GetItemById", ReplyAction="http://tempuri.org/IAuctionService/GetItemByIdResponse")]
        System.Threading.Tasks.Task<TestClient.AuctionService.AuctionItem> GetItemByIdAsync(int itemNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/MakeBid", ReplyAction="http://tempuri.org/IAuctionService/MakeBidResponse")]
        string MakeBid(TestClient.AuctionService.Bid bid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/MakeBid", ReplyAction="http://tempuri.org/IAuctionService/MakeBidResponse")]
        System.Threading.Tasks.Task<string> MakeBidAsync(TestClient.AuctionService.Bid bid);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAuctionServiceChannel : TestClient.AuctionService.IAuctionService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AuctionServiceClient : System.ServiceModel.ClientBase<TestClient.AuctionService.IAuctionService>, TestClient.AuctionService.IAuctionService {
        
        public AuctionServiceClient() {
        }
        
        public AuctionServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AuctionServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AuctionServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AuctionServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public TestClient.AuctionService.AuctionItem[] GetAllItems() {
            return base.Channel.GetAllItems();
        }
        
        public System.Threading.Tasks.Task<TestClient.AuctionService.AuctionItem[]> GetAllItemsAsync() {
            return base.Channel.GetAllItemsAsync();
        }
        
        public TestClient.AuctionService.AuctionItem GetItemById(int itemNumber) {
            return base.Channel.GetItemById(itemNumber);
        }
        
        public System.Threading.Tasks.Task<TestClient.AuctionService.AuctionItem> GetItemByIdAsync(int itemNumber) {
            return base.Channel.GetItemByIdAsync(itemNumber);
        }
        
        public string MakeBid(TestClient.AuctionService.Bid bid) {
            return base.Channel.MakeBid(bid);
        }
        
        public System.Threading.Tasks.Task<string> MakeBidAsync(TestClient.AuctionService.Bid bid) {
            return base.Channel.MakeBidAsync(bid);
        }
    }
}
